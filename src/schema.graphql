type Query {
  me: User
  jobs: [Job]!
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  publish(id: ID!): Boolean!
  unpublish(id: ID!): Boolean!
  createJob(input: JobCreateInput): Boolean!
}

input JobCreateInput {
  title: String!
  url: String
  company: String!
  description: String!
  city: String!
  categories: [String!]!
  tags: [String]!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
}

type City {
  id: ID!
  lat: Float!
  lng: Float!
  name: String!
  district: String!
}

type Job {
  slug: String!
  title: String!
  url: String
  company: String!
  description: String!
  city: City!
  published_at: String!
  categories: [Category!]!
  tags: [Tag]!
}

type Category {
  id: ID!
  name: String!
  jobs: [Job]
}

type Tag {
  id: ID!
  name: String!
  jobs: [Job]
}